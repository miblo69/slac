head	1.4;
access;
symbols;
locks
	mibl:1.4; strict;
comment	@# @;


1.4
date	2004.08.25.12.07.52;	author mibl;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.08.17.08.31;	author mibl;	state Exp;
branches;
next	1.2;

1.2
date	2003.09.29.09.08.51;	author mibl;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.29.08.57.18;	author mibl;	state Exp;
branches;
next	;


desc
@INitial Check-in
@


1.4
log
@Added more features.
@
text
@#!/usr/bin/perl 
# $Id: upload.cgi,v 1.3 2004/05/08 17:08:31 mibl Exp mibl $

use CGI; 

use Sys::Syslog;                          # all except setlogsock, or:
use Sys::Syslog qw(:DEFAULT setlogsock);  # default set, plus setlogsock

$SECSRCH = '/usr/local/slac/secsrch.pl';
$FWSECSRCH = '/usr/local/slac/fw1-secsrch.pl';
$upload_dir = '/var/tmp';

$query = new CGI;

slog("Remote host: " . $query->remote_host());
slog("Request method: " . $query->request_method());
slog("HTTP Headers: " . $query->http());

foreach $x ($query->http()) {
    slog($x . ': ' . $query->http($x));
}

#exit;

slog("Retrieved POST value-pairs:");
%P = $query->Vars;
#slog("%P");
foreach $p1 (keys %P) {
    slog("  $p1\: $P{$p1}");
}

$filename = $query->param("logfile"); 
slog("Filename: $filename");
$email_address = $query->param("email_address"); 
slog("Email address: $email_adddress");
$type = $query->param("type");
slog("Type: $type");

# Check for correctly filled in params befor processing

if ($filename =~ m/^$/) {
    slog("Missing filename. Exiting");
    print $query->header(-type=>'text/html');
    print $query->start_html();
    print "Missing filename!<br>Hit 'Back' in your browser and select a file before submitting.";
    print $query->end_html();
    exit;
}



$ssparam = '';   # String of parameters to send to analysis prog

if ($query->param("nr") eq '') { $ssparam .= ' -N '; }
if ($query->param('output') eq 'xml') { 
    $ssparam .= ' -X '; 
    print $query->header(-type=>'text/xml'); 
} else {
    print $query->header(-type=>'text/plain'); 
}

if ($query->param('explan') =~ m/^on$/i) {
    slog("Adding Explanatory texts");
    $ssparam .= ' -p ';
}

if ($type =~ m/^fw$/i) {
    $ANALYSIS = $FWSECSRCH;
    $ssparam .= ' -i ';
} elsif ($type =~ m/^web$/i) {
    $ANALYSIS = $SECSRCH;
    $ssparam .= ' -i '; 
} else {
    slog("Someone is fooling around with 'type' param. Exiting!");
    exit;
}
    
$filename =~ s/.*[\/\\](.*)/$1/; 
$file = $upload_dir . '/' . $$ . $filename;

$upload_filehandle = $query->upload("logfile"); 
open UPLOADFILE, ">$file";
binmode UPLOADFILE;
while ( <$upload_filehandle> ) { 
    print UPLOADFILE; 
} 

close UPLOADFILE; 

#$file = '/var/tmp/30290ex000916.log';

if ( ! -f $file ) {
    slog("Exiting. File '$file' does not exist.");
    die "Exiting. File '$file' does not exist.";
} else {
    slog("File uploaded: $file.");
}


($dev,$ino,$mode,$nlink,$uid,$gid,$rdev,$size,$atime,$mtime,$ctime,$blksize,$blocks) = stat "$file";

$run = $ANALYSIS . " $ssparam $file " . '-o -';

slog("Command to run: " . $run);

#$result = system($run);
$result = qx/$run/;

#print $query->header(-type => "text/xml"); 
#print "Content-Type: text/xml\n\n";
#$starttime = localtime();
#print $query->start_html();
#print "gyfebglk";
print $result;
#print $query->end_html();
exit;

print <<END_HTML; 

<HTML> 
    <HEAD> 
    <TITLE>Thanks!</TITLE> 
    </HEAD> 

    <BODY> 

    <P>Your file was received and will be processed shortly.</P> 
    <P>Your email address: $email_address</P> 
    <P>Your Logfile: $filename</P> 
    <P>Starttime: $starttime</P>
    <table>
    <tr><td>Parameters:</td><td>$ssparam</td></tr>
    <tr><td>Receieved bytes: </td><td>$size</td></tr>
    <tr><td>atime</td><td>$atime</td></tr>
    
    </table>

    Processing will commence immediately, and the results will be shown below.<br><br><br>

    <font "courier,sans serif">

END_HTML



$result = system($run);


print <<END_HTML2;

$result



    </font>
    </BODY> 
</HTML> 


END_HTML2




sub slog {
    setlogsock('unix');
    openlog('upload.cgi', 'cons,pid', 'local2');
    syslog('info', '%s', @@_);
    closelog;
}
@


1.3
log
@fixes.
@
text
@d2 1
a2 1
# $Id: upload.cgi,v 1.2 2003/09/29 09:08:51 mibl Exp mibl $
a8 1
#$upload_dir = "/usr/local/apache/htdocs/upload"; 
d10 1
d13 5
a17 3
$query = new CGI; 
$filename = $query->param("logfile"); 
$email_address = $query->param("email_address"); 
d19 2
a20 2
if ($query->param("nr") eq '') {
    $nres = '-N';
d23 8
a30 2
$filename =~ s/.*[\/\\](.*)/$1/; 
$file = $upload_dir . '/' . $$ . $filename;
d32 17
a48 8
#if ($email_address !~ m/[\d\w\_\-]*\@@[\d\n\.\_\-]*/) {
#    print <<NOHTML;
#    <HTML>
#    <head><title>Error</title></head>
#    <BODY>
#    Not a  valid e-mail address. Try again
#    </BODY>
#    </HTML>
a50 1
#NOHTML
d52 1
d54 7
a60 2
#exit;
#}
d62 4
d67 13
d90 2
d95 2
d99 1
d102 1
a102 3
#$run = '/usr/local/bin/nail -a ' . "$file" . ' -s "webform" -r ' . $email_address;

$run = $SECSRCH . ' -W ' . " $nres $file " . '-';
d106 2
a107 1
print $query->header(); 
d109 8
a116 1
$starttime = localtime();
d132 1
a132 1
    <tr><td>Name res:</td><td>$nres</td></tr>
@


1.2
log
@Addes slog sub
@
text
@d1 2
a2 2
#!/usr/bin/perl -w 
# $Id: $
d10 1
d12 1
d16 1
d22 1
a22 1
$file = $upload_dir . '/' . $filename;
d51 5
d60 1
a60 1
$run = '/usr/local/secsrch/secsrch.pl -W ' . " $nres $file " . '-';
d62 1
a62 1
slog($run);
d64 1
a64 1
print $query->header ( ); 
d66 1
d80 1
d85 1
@


1.1
log
@Initial revision
@
text
@d2 1
d6 3
d54 2
d104 6
@
